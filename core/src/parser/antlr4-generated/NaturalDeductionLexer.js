// Generated from NaturalDeduction.g4 by ANTLR 4.9.3
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002-\u0117\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#",
    "\t#\u0004$\t$\u0004%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004",
    "*\t*\u0004+\t+\u0004,\t,\u0004-\t-\u0003\u0002\u0003\u0002\u0003\u0002",
    "\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005",
    "\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006",
    "\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006",
    "\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\b\u0003\b",
    "\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003",
    "\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003",
    "\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u000f\u0007\u000f\u0093",
    "\n\u000f\f\u000f\u000e\u000f\u0096\u000b\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0005\u0010\u009e\n",
    "\u0010\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003",
    "\u0012\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0018\u0003",
    "\u0018\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019\u0003\u0019\u0003",
    "\u0019\u0003\u0019\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a\u0003",
    "\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003",
    "\u001c\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001d\u0003",
    "\u001d\u0003\u001d\u0003\u001d\u0003\u001e\u0003\u001e\u0003\u001e\u0003",
    "\u001e\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003",
    " \u0003 \u0003 \u0003 \u0003 \u0003!\u0003!\u0003!\u0003\"\u0003\"\u0003",
    "\"\u0003#\u0003#\u0007#\u00e8\n#\f#\u000e#\u00eb\u000b#\u0003$\u0003",
    "$\u0007$\u00ef\n$\f$\u000e$\u00f2\u000b$\u0003%\u0003%\u0007%\u00f6",
    "\n%\f%\u000e%\u00f9\u000b%\u0003&\u0005&\u00fc\n&\u0003&\u0003&\u0003",
    "&\u0003&\u0003\'\u0006\'\u0103\n\'\r\'\u000e\'\u0104\u0003\'\u0003\'",
    "\u0003(\u0003(\u0003)\u0003)\u0003*\u0003*\u0003+\u0003+\u0003+\u0003",
    ",\u0003,\u0003,\u0003,\u0003-\u0003-\u0003\u0094\u0002.\u0003\u0003",
    "\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013",
    "\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0002",
    "!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a",
    "5\u001b7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-\u0003",
    "\u0002\u0007\u0003\u0002C\\\u0003\u00022;\u0003\u0002c|\u0003\u0002",
    "3;\u0004\u0002\u000b\u000b\"\"\u0002\u011d\u0002\u0003\u0003\u0002\u0002",
    "\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002",
    "\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002",
    "\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002",
    "\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002",
    "\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002",
    "\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002",
    "\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002",
    "\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002",
    "\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002",
    "+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002\u0002\u0002/\u0003",
    "\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002\u00023\u0003\u0002",
    "\u0002\u0002\u00025\u0003\u0002\u0002\u0002\u00027\u0003\u0002\u0002",
    "\u0002\u00029\u0003\u0002\u0002\u0002\u0002;\u0003\u0002\u0002\u0002",
    "\u0002=\u0003\u0002\u0002\u0002\u0002?\u0003\u0002\u0002\u0002\u0002",
    "A\u0003\u0002\u0002\u0002\u0002C\u0003\u0002\u0002\u0002\u0002E\u0003",
    "\u0002\u0002\u0002\u0002G\u0003\u0002\u0002\u0002\u0002I\u0003\u0002",
    "\u0002\u0002\u0002K\u0003\u0002\u0002\u0002\u0002M\u0003\u0002\u0002",
    "\u0002\u0002O\u0003\u0002\u0002\u0002\u0002Q\u0003\u0002\u0002\u0002",
    "\u0002S\u0003\u0002\u0002\u0002\u0002U\u0003\u0002\u0002\u0002\u0002",
    "W\u0003\u0002\u0002\u0002\u0002Y\u0003\u0002\u0002\u0002\u0003[\u0003",
    "\u0002\u0002\u0002\u0005b\u0003\u0002\u0002\u0002\u0007g\u0003\u0002",
    "\u0002\u0002\ti\u0003\u0002\u0002\u0002\u000bl\u0003\u0002\u0002\u0002",
    "\rw\u0003\u0002\u0002\u0002\u000fy\u0003\u0002\u0002\u0002\u0011\u0080",
    "\u0003\u0002\u0002\u0002\u0013\u0085\u0003\u0002\u0002\u0002\u0015\u0087",
    "\u0003\u0002\u0002\u0002\u0017\u0089\u0003\u0002\u0002\u0002\u0019\u008b",
    "\u0003\u0002\u0002\u0002\u001b\u008d\u0003\u0002\u0002\u0002\u001d\u008f",
    "\u0003\u0002\u0002\u0002\u001f\u009d\u0003\u0002\u0002\u0002!\u009f",
    "\u0003\u0002\u0002\u0002#\u00a2\u0003\u0002\u0002\u0002%\u00a5\u0003",
    "\u0002\u0002\u0002\'\u00a8\u0003\u0002\u0002\u0002)\u00ab\u0003\u0002",
    "\u0002\u0002+\u00ae\u0003\u0002\u0002\u0002-\u00b1\u0003\u0002\u0002",
    "\u0002/\u00b5\u0003\u0002\u0002\u00021\u00b9\u0003\u0002\u0002\u0002",
    "3\u00be\u0003\u0002\u0002\u00025\u00c3\u0003\u0002\u0002\u00027\u00c8",
    "\u0003\u0002\u0002\u00029\u00cd\u0003\u0002\u0002\u0002;\u00d1\u0003",
    "\u0002\u0002\u0002=\u00d5\u0003\u0002\u0002\u0002?\u00da\u0003\u0002",
    "\u0002\u0002A\u00df\u0003\u0002\u0002\u0002C\u00e2\u0003\u0002\u0002",
    "\u0002E\u00e5\u0003\u0002\u0002\u0002G\u00ec\u0003\u0002\u0002\u0002",
    "I\u00f3\u0003\u0002\u0002\u0002K\u00fb\u0003\u0002\u0002\u0002M\u0102",
    "\u0003\u0002\u0002\u0002O\u0108\u0003\u0002\u0002\u0002Q\u010a\u0003",
    "\u0002\u0002\u0002S\u010c\u0003\u0002\u0002\u0002U\u010e\u0003\u0002",
    "\u0002\u0002W\u0111\u0003\u0002\u0002\u0002Y\u0115\u0003\u0002\u0002",
    "\u0002[\\\u0007k\u0002\u0002\\]\u0007o\u0002\u0002]^\u0007r\u0002\u0002",
    "^_\u0007q\u0002\u0002_`\u0007t\u0002\u0002`a\u0007v\u0002\u0002a\u0004",
    "\u0003\u0002\u0002\u0002bc\u0007h\u0002\u0002cd\u0007t\u0002\u0002d",
    "e\u0007q\u0002\u0002ef\u0007o\u0002\u0002f\u0006\u0003\u0002\u0002\u0002",
    "gh\u0007=\u0002\u0002h\b\u0003\u0002\u0002\u0002ij\u0007k\u0002\u0002",
    "jk\u0007p\u0002\u0002k\n\u0003\u0002\u0002\u0002lm\u0007u\u0002\u0002",
    "mn\u0007w\u0002\u0002no\u0007d\u0002\u0002op\u0007u\u0002\u0002pq\u0007",
    "v\u0002\u0002qr\u0007k\u0002\u0002rs\u0007v\u0002\u0002st\u0007w\u0002",
    "\u0002tu\u0007v\u0002\u0002uv\u0007g\u0002\u0002v\f\u0003\u0002\u0002",
    "\u0002wx\u0007.\u0002\u0002x\u000e\u0003\u0002\u0002\u0002yz\u0007t",
    "\u0002\u0002z{\u0007g\u0002\u0002{|\u0007u\u0002\u0002|}\u0007w\u0002",
    "\u0002}~\u0007n\u0002\u0002~\u007f\u0007v\u0002\u0002\u007f\u0010\u0003",
    "\u0002\u0002\u0002\u0080\u0081\u0007y\u0002\u0002\u0081\u0082\u0007",
    "k\u0002\u0002\u0082\u0083\u0007v\u0002\u0002\u0083\u0084\u0007j\u0002",
    "\u0002\u0084\u0012\u0003\u0002\u0002\u0002\u0085\u0086\u0007+\u0002",
    "\u0002\u0086\u0014\u0003\u0002\u0002\u0002\u0087\u0088\u0007<\u0002",
    "\u0002\u0088\u0016\u0003\u0002\u0002\u0002\u0089\u008a\u0007*\u0002",
    "\u0002\u008a\u0018\u0003\u0002\u0002\u0002\u008b\u008c\u0007]\u0002",
    "\u0002\u008c\u001a\u0003\u0002\u0002\u0002\u008d\u008e\u0007_\u0002",
    "\u0002\u008e\u001c\u0003\u0002\u0002\u0002\u008f\u0094\u0007$\u0002",
    "\u0002\u0090\u0093\u0005\u001f\u0010\u0002\u0091\u0093\u000b\u0002\u0002",
    "\u0002\u0092\u0090\u0003\u0002\u0002\u0002\u0092\u0091\u0003\u0002\u0002",
    "\u0002\u0093\u0096\u0003\u0002\u0002\u0002\u0094\u0095\u0003\u0002\u0002",
    "\u0002\u0094\u0092\u0003\u0002\u0002\u0002\u0095\u0097\u0003\u0002\u0002",
    "\u0002\u0096\u0094\u0003\u0002\u0002\u0002\u0097\u0098\u0007$\u0002",
    "\u0002\u0098\u001e\u0003\u0002\u0002\u0002\u0099\u009a\u0007^\u0002",
    "\u0002\u009a\u009e\u0007$\u0002\u0002\u009b\u009c\u0007^\u0002\u0002",
    "\u009c\u009e\u0007^\u0002\u0002\u009d\u0099\u0003\u0002\u0002\u0002",
    "\u009d\u009b\u0003\u0002\u0002\u0002\u009e \u0003\u0002\u0002\u0002",
    "\u009f\u00a0\u0007R\u0002\u0002\u00a0\u00a1\u0007T\u0002\u0002\u00a1",
    "\"\u0003\u0002\u0002\u0002\u00a2\u00a3\u0007V\u0002\u0002\u00a3\u00a4",
    "\u0007J\u0002\u0002\u00a4$\u0003\u0002\u0002\u0002\u00a5\u00a6\u0007",
    "-\u0002\u0002\u00a6\u00a7\u0007C\u0002\u0002\u00a7&\u0003\u0002\u0002",
    "\u0002\u00a8\u00a9\u0007/\u0002\u0002\u00a9\u00aa\u0007C\u0002\u0002",
    "\u00aa(\u0003\u0002\u0002\u0002\u00ab\u00ac\u0007-\u0002\u0002\u00ac",
    "\u00ad\u0007G\u0002\u0002\u00ad*\u0003\u0002\u0002\u0002\u00ae\u00af",
    "\u0007/\u0002\u0002\u00af\u00b0\u0007G\u0002\u0002\u00b0,\u0003\u0002",
    "\u0002\u0002\u00b1\u00b2\u0007-\u0002\u0002\u00b2\u00b3\u0007K\u0002",
    "\u0002\u00b3\u00b4\u0007H\u0002\u0002\u00b4.\u0003\u0002\u0002\u0002",
    "\u00b5\u00b6\u0007/\u0002\u0002\u00b6\u00b7\u0007K\u0002\u0002\u00b7",
    "\u00b8\u0007H\u0002\u0002\u00b80\u0003\u0002\u0002\u0002\u00b9\u00ba",
    "\u0007-\u0002\u0002\u00ba\u00bb\u0007K\u0002\u0002\u00bb\u00bc\u0007",
    "H\u0002\u0002\u00bc\u00bd\u0007H\u0002\u0002\u00bd2\u0003\u0002\u0002",
    "\u0002\u00be\u00bf\u0007/\u0002\u0002\u00bf\u00c0\u0007K\u0002\u0002",
    "\u00c0\u00c1\u0007H\u0002\u0002\u00c1\u00c2\u0007H\u0002\u0002\u00c2",
    "4\u0003\u0002\u0002\u0002\u00c3\u00c4\u0007-\u0002\u0002\u00c4\u00c5",
    "\u0007C\u0002\u0002\u00c5\u00c6\u0007P\u0002\u0002\u00c6\u00c7\u0007",
    "F\u0002\u0002\u00c76\u0003\u0002\u0002\u0002\u00c8\u00c9\u0007/\u0002",
    "\u0002\u00c9\u00ca\u0007C\u0002\u0002\u00ca\u00cb\u0007P\u0002\u0002",
    "\u00cb\u00cc\u0007F\u0002\u0002\u00cc8\u0003\u0002\u0002\u0002\u00cd",
    "\u00ce\u0007-\u0002\u0002\u00ce\u00cf\u0007Q\u0002\u0002\u00cf\u00d0",
    "\u0007T\u0002\u0002\u00d0:\u0003\u0002\u0002\u0002\u00d1\u00d2\u0007",
    "/\u0002\u0002\u00d2\u00d3\u0007Q\u0002\u0002\u00d3\u00d4\u0007T\u0002",
    "\u0002\u00d4<\u0003\u0002\u0002\u0002\u00d5\u00d6\u0007-\u0002\u0002",
    "\u00d6\u00d7\u0007P\u0002\u0002\u00d7\u00d8\u0007Q\u0002\u0002\u00d8",
    "\u00d9\u0007V\u0002\u0002\u00d9>\u0003\u0002\u0002\u0002\u00da\u00db",
    "\u0007/\u0002\u0002\u00db\u00dc\u0007P\u0002\u0002\u00dc\u00dd\u0007",
    "Q\u0002\u0002\u00dd\u00de\u0007V\u0002\u0002\u00de@\u0003\u0002\u0002",
    "\u0002\u00df\u00e0\u0007Z\u0002\u0002\u00e0\u00e1\u0007R\u0002\u0002",
    "\u00e1B\u0003\u0002\u0002\u0002\u00e2\u00e3\u0007T\u0002\u0002\u00e3",
    "\u00e4\u0007R\u0002\u0002\u00e4D\u0003\u0002\u0002\u0002\u00e5\u00e9",
    "\t\u0002\u0002\u0002\u00e6\u00e8\t\u0003\u0002\u0002\u00e7\u00e6\u0003",
    "\u0002\u0002\u0002\u00e8\u00eb\u0003\u0002\u0002\u0002\u00e9\u00e7\u0003",
    "\u0002\u0002\u0002\u00e9\u00ea\u0003\u0002\u0002\u0002\u00eaF\u0003",
    "\u0002\u0002\u0002\u00eb\u00e9\u0003\u0002\u0002\u0002\u00ec\u00f0\t",
    "\u0004\u0002\u0002\u00ed\u00ef\t\u0003\u0002\u0002\u00ee\u00ed\u0003",
    "\u0002\u0002\u0002\u00ef\u00f2\u0003\u0002\u0002\u0002\u00f0\u00ee\u0003",
    "\u0002\u0002\u0002\u00f0\u00f1\u0003\u0002\u0002\u0002\u00f1H\u0003",
    "\u0002\u0002\u0002\u00f2\u00f0\u0003\u0002\u0002\u0002\u00f3\u00f7\t",
    "\u0005\u0002\u0002\u00f4\u00f6\t\u0003\u0002\u0002\u00f5\u00f4\u0003",
    "\u0002\u0002\u0002\u00f6\u00f9\u0003\u0002\u0002\u0002\u00f7\u00f5\u0003",
    "\u0002\u0002\u0002\u00f7\u00f8\u0003\u0002\u0002\u0002\u00f8J\u0003",
    "\u0002\u0002\u0002\u00f9\u00f7\u0003\u0002\u0002\u0002\u00fa\u00fc\u0007",
    "\u000f\u0002\u0002\u00fb\u00fa\u0003\u0002\u0002\u0002\u00fb\u00fc\u0003",
    "\u0002\u0002\u0002\u00fc\u00fd\u0003\u0002\u0002\u0002\u00fd\u00fe\u0007",
    "\f\u0002\u0002\u00fe\u00ff\u0003\u0002\u0002\u0002\u00ff\u0100\b&\u0002",
    "\u0002\u0100L\u0003\u0002\u0002\u0002\u0101\u0103\t\u0006\u0002\u0002",
    "\u0102\u0101\u0003\u0002\u0002\u0002\u0103\u0104\u0003\u0002\u0002\u0002",
    "\u0104\u0102\u0003\u0002\u0002\u0002\u0104\u0105\u0003\u0002\u0002\u0002",
    "\u0105\u0106\u0003\u0002\u0002\u0002\u0106\u0107\b\'\u0002\u0002\u0107",
    "N\u0003\u0002\u0002\u0002\u0108\u0109\u0007\u0080\u0002\u0002\u0109",
    "P\u0003\u0002\u0002\u0002\u010a\u010b\u0007(\u0002\u0002\u010bR\u0003",
    "\u0002\u0002\u0002\u010c\u010d\u0007~\u0002\u0002\u010dT\u0003\u0002",
    "\u0002\u0002\u010e\u010f\u0007/\u0002\u0002\u010f\u0110\u0007@\u0002",
    "\u0002\u0110V\u0003\u0002\u0002\u0002\u0111\u0112\u0007>\u0002\u0002",
    "\u0112\u0113\u0007/\u0002\u0002\u0113\u0114\u0007@\u0002\u0002\u0114",
    "X\u0003\u0002\u0002\u0002\u0115\u0116\u000b\u0002\u0002\u0002\u0116",
    "Z\u0003\u0002\u0002\u0002\u000b\u0002\u0092\u0094\u009d\u00e9\u00f0",
    "\u00f7\u00fb\u0104\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class NaturalDeductionLexer extends antlr4.Lexer {

    static grammarFileName = "NaturalDeduction.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'import'", "'from'", "';'", "'in'", "'substitute'", 
                         "','", "'result'", "'with'", "')'", "':'", "'('", 
                         "'['", "']'", null, "'PR'", "'TH'", "'+A'", "'-A'", 
                         "'+E'", "'-E'", "'+IF'", "'-IF'", "'+IFF'", "'-IFF'", 
                         "'+AND'", "'-AND'", "'+OR'", "'-OR'", "'+NOT'", 
                         "'-NOT'", "'XP'", "'RP'", null, null, null, null, 
                         null, "'~'", "'&'", "'|'", "'->'", "'<->'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, "STRING", 
                          "RULE_PREMISE", "RULE_THEOREM", "RULE_A_IN", "RULE_A_OUT", 
                          "RULE_E_IN", "RULE_E_OUT", "RULE_IF_IN", "RULE_IF_OUT", 
                          "RULE_IFF_IN", "RULE_IFF_OUT", "RULE_AND_IN", 
                          "RULE_AND_OUT", "RULE_OR_IN", "RULE_OR_OUT", "RULE_NOT_IN", 
                          "RULE_NOT_OUT", "RULE_EXPLOSION", "RULE_REPETITION", 
                          "PRED_VAR", "TERM_VAR", "NUMBER", "NEWLINE", "WS", 
                          "NEGATION", "CONJUNCTION", "DISJUNCTION", "CONDITIONAL", 
                          "BICONDITIONAL", "UNKNOWN" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "STRING", "ESC", "RULE_PREMISE", "RULE_THEOREM", "RULE_A_IN", 
                      "RULE_A_OUT", "RULE_E_IN", "RULE_E_OUT", "RULE_IF_IN", 
                      "RULE_IF_OUT", "RULE_IFF_IN", "RULE_IFF_OUT", "RULE_AND_IN", 
                      "RULE_AND_OUT", "RULE_OR_IN", "RULE_OR_OUT", "RULE_NOT_IN", 
                      "RULE_NOT_OUT", "RULE_EXPLOSION", "RULE_REPETITION", 
                      "PRED_VAR", "TERM_VAR", "NUMBER", "NEWLINE", "WS", 
                      "NEGATION", "CONJUNCTION", "DISJUNCTION", "CONDITIONAL", 
                      "BICONDITIONAL", "UNKNOWN" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

NaturalDeductionLexer.EOF = antlr4.Token.EOF;
NaturalDeductionLexer.T__0 = 1;
NaturalDeductionLexer.T__1 = 2;
NaturalDeductionLexer.T__2 = 3;
NaturalDeductionLexer.T__3 = 4;
NaturalDeductionLexer.T__4 = 5;
NaturalDeductionLexer.T__5 = 6;
NaturalDeductionLexer.T__6 = 7;
NaturalDeductionLexer.T__7 = 8;
NaturalDeductionLexer.T__8 = 9;
NaturalDeductionLexer.T__9 = 10;
NaturalDeductionLexer.T__10 = 11;
NaturalDeductionLexer.T__11 = 12;
NaturalDeductionLexer.T__12 = 13;
NaturalDeductionLexer.STRING = 14;
NaturalDeductionLexer.RULE_PREMISE = 15;
NaturalDeductionLexer.RULE_THEOREM = 16;
NaturalDeductionLexer.RULE_A_IN = 17;
NaturalDeductionLexer.RULE_A_OUT = 18;
NaturalDeductionLexer.RULE_E_IN = 19;
NaturalDeductionLexer.RULE_E_OUT = 20;
NaturalDeductionLexer.RULE_IF_IN = 21;
NaturalDeductionLexer.RULE_IF_OUT = 22;
NaturalDeductionLexer.RULE_IFF_IN = 23;
NaturalDeductionLexer.RULE_IFF_OUT = 24;
NaturalDeductionLexer.RULE_AND_IN = 25;
NaturalDeductionLexer.RULE_AND_OUT = 26;
NaturalDeductionLexer.RULE_OR_IN = 27;
NaturalDeductionLexer.RULE_OR_OUT = 28;
NaturalDeductionLexer.RULE_NOT_IN = 29;
NaturalDeductionLexer.RULE_NOT_OUT = 30;
NaturalDeductionLexer.RULE_EXPLOSION = 31;
NaturalDeductionLexer.RULE_REPETITION = 32;
NaturalDeductionLexer.PRED_VAR = 33;
NaturalDeductionLexer.TERM_VAR = 34;
NaturalDeductionLexer.NUMBER = 35;
NaturalDeductionLexer.NEWLINE = 36;
NaturalDeductionLexer.WS = 37;
NaturalDeductionLexer.NEGATION = 38;
NaturalDeductionLexer.CONJUNCTION = 39;
NaturalDeductionLexer.DISJUNCTION = 40;
NaturalDeductionLexer.CONDITIONAL = 41;
NaturalDeductionLexer.BICONDITIONAL = 42;
NaturalDeductionLexer.UNKNOWN = 43;



